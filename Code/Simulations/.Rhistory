install.packages("ggplot2")
library(multiDA)
res <- multiDA(mX=SRBCT$mX, vy=SRBCT$vy, penalty="EBIC", set.options = "exhaustive", equal.var=TRUE)
plot(res)
hist(infert$age)
plot(density(infert$age))
hist(swiss$Agriculture,freq=T)
hist(swiss$Agriculture,freq=F)
data <- c(1,2,3,4,5)
fruit <- read.csv("Fruit.csv")
levels(fruit$Fruit.Type)
help(pbinom)
dbinom(12,25,0.5)
help("var.test")
x <- rnorm(10, mean=2,sd=5)
y <- rnorm(10, mean=2, sd=3)
var.test(x,y,alternative="less")
var.test(x,y,alternative="two.sided")
var.test(x,y,alternative="greater")
0.2844*2
help("pnorm")
library(TMB)
?gdbsource
head(mtcars)
data = read.csv("AllFatalities.csv")
data = read.csv("AllFatalities.csv")
data = read.csv("AllFatalities.csv")
getwd()
data = read.csv("AllFatalities.csv")
getwd()
read.csv("AllFatalities.csv")
data = read.csv("AllFatalities.csv")
data = read.csv("AllFatalities.csv")
2+2
sin(0)
x = 2
x^2
ln(0.01)
log(0.01)
log(0.0000001)
log(0.0000000000000000000000000001)
log(0.00000000000000000000000000000000000000000000000000000000000001)
log(0.000000000000000000000000000000000000000000000000000000000000000000000000000001)
log(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
log(10^{-40})
log(10^{-1000})
log(10^{-100})
log(10^{-200})
install.packages("vegan")
library(plyr)
y <- as.factor(c("gold", "silver"))
n <- revalue(y, c("G", "S"))
n <- revalue(y, c("gold" = "G", "silver" = "S"))
n
levels(y) <-  n
y
y <- as.factor(c("gold", "silver"))
n <- revalue(y, c("gold" = "G", "silver" = "S"))
y
levels(y) <-  n
y
library(multiDA)
SRBCT$mX
dim(SRBCT$mX)
dim(mY)
install.packages("rfm")
library(rfm)
rfm_data_orders
x = rep("A", 10)
y = rep("B", 10)
z = 1:10
ID = paste("ID_", 1:10, sep="")
data1 = data.frame(x=x, y=y, z = z, ID=ID)
k = rep("C", 10)
ID = paste("ID_", 1:10, sep="")
data2 = data.frame(k = k, ID = ID)
library(dplyr)
left_join(data1, data2, key="ID")
x = rep(c("Group 1", "Group 2"), 10)
y = rep("B", 10)
z = 1:10
ID = paste("ID_", 1:10, sep="")
data1 = data.frame(x=x, y=y, z = z, ID=ID)
k = rep("C", 10)
ID = paste("ID_", 1:10, sep="")
data2 = data.frame(k = k, ID = ID)
library(dplyr)
left_join(data1, data2, key="ID")
x = rep(c("Group 1", "Group 2"), each = 5)
y = rep("B", 10)
z = 1:10
ID = paste("ID_", 1:10, sep="")
data1 = data.frame(x=x, y=y, z = z, ID=ID)
k = rep("C", 10)
ID = paste("ID_", 1:10, sep="")
data2 = data.frame(k = k, ID = ID)
library(dplyr)
left_join(data1, data2, key="ID")
data = left_join(data1, data2, key="ID")
group_by(data, x)
summarise(group_by(data, x), sum)
aggregate(data$z, by=list(Group=data$x), FUN=sum)
aggregate(data$z, by=list(color=data$x), FUN=sum)
g =aggregate(data$z, by=list(color=data$x), FUN=sum)
which.max(g$x)
g$color[which.max(g$x)]
df1 <- structure(list(id1 = c("a", "a", "a", "a", "b", "b",
"b", "b"
), id2 = c("x", "x", "y", "y", "x", "y", "x", "y"),
val1 = c(1L,
2L, 3L, 4L, 1L, 4L, 3L, 2L), val2 = c(9L, 4L, 5L, 9L, 7L, 4L,
9L, 8L)), .Names = c("id1", "id2", "val1", "val2"),
class = "data.frame", row.names = c("1",
"2", "3", "4", "5", "6", "7", "8"))
df1 <- structure(list(id1 = c("a", "a", "a", "a", "b", "b",
"b", "b"
), id2 = c("x", "x", "y", "y", "x", "y", "x", "y"),
val1 = c(1L,
2L, 3L, 4L, 1L, 4L, 3L, 2L), val2 = c(9L, 4L, 5L, 9L, 7L, 4L,
9L, 8L)), .Names = c("id1", "id2", "val1", "val2"),
class = "data.frame", row.names = c("1",
"2", "3", "4", "5", "6", "7", "8"))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_each(funs(mean))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_at(val1, funs(mean))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_at(funs(mean), val1)
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(mean=mean)
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(sum))
summarise_all(group_by(df1, id1, id2), funs(sum))
summarise_all(group_by(select(df1, val1, id1, id2), id1, id2), funs(sum))
summarise_all(group_by(select(df1, val1, id1, id2), id1, id2), funs(sum))$val1
summarise_all(group_by(df1, id1, id2), funs(sum))
df1 = select(df1, val1)
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
df1 <- structure(list(id1 = c("a", "a", "a", "a", "b", "b",
"b", "b"
), id2 = c("x", "x", "y", "y", "x", "y", "x", "y"),
val1 = c(1L,
2L, 3L, 4L, 1L, 4L, 3L, 2L), val2 = c(9L, 4L, 5L, 9L, 7L, 4L,
9L, 8L)), .Names = c("id1", "id2", "val1", "val2"),
class = "data.frame", row.names = c("1",
"2", "3", "4", "5", "6", "7", "8"))
library(dplyr)
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
df1 = select(df1, c(val1, id1, id2))
df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
t = df1 %>%
group_by(id1, id2) %>%
summarise_all(funs(mean))
df1 %>% group_by(id2) %>% summarise_all(funs(length(unique())))
df1 %>% group_by(id2) %>% summarise_all(funs(length(unique(x))))
df1
df1 %>% tally()
df1 %>% group_by(id1, id2) %>% tally()
df1 %>% group_by(id1, id2) %>% count(id2)
df1 %>% group_by(id1, id2) %>% mutate(count = n())
aggregate(.~id1+id2, df1, mean)
aggregate(aggregate(.~id1+id2, df1, mean), id2, fun=sum))
aggregate(aggregate(.~id1+id2, df1, mean), id2, fun=sum)
aggregate(aggregate(.~id1+id2, df1, mean), id2, FUN=sum)
x %>%
group_by(id1, id2) %>%
summarise_at(vars(val1, val2), funs(mean, n()))
df1 %>%
group_by(id1, id2) %>%
summarise_at(vars(-val2), funs(mean, n()))
df1 %>%
group_by(id1, id2) %>%
summarise_at(vars(val1), funs(mean, n()))
df = df1 %>%
group_by(id1, id2) %>%
summarise_at(vars(val1), funs(mean, n()))
df %>% group_by(id1) %>% summarise_at(vars(n), funs(sum))
setwd("C:/Users/sarah/Dropbox (Sydney Uni)/Shared folders with John/MulticlassCode/CodePaper/Code/Simulations")
setwd("C:/Users/sarah/Dropbox (Sydney Uni)/Shared folders with John/MulticlassCode/CodePaper/Code/Simulations")
